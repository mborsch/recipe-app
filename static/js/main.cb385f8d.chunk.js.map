{"version":3,"sources":["RecipeCreate.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","createRecipe","initialFormState","name","cuisine","photo","ingredients","preparation","useState","formData","setFormData","handleChange","target","value","onSubmit","event","preventDefault","console","log","htmlFor","type","id","onChange","placeholder","rows","width","RecipeList","recipes","deleteRecipe","map","index","key","src","className","onClick","RecipeData","App","setRecipes","indexToDelete","curRecipes","filter","recipe","newRecipe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb385f8d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({ createRecipe }) {\n  // TODO: When the form is submitted, a new recipe should be created, and the form contents cleared.\n  // TODO: Add the required input and textarea form elements.\n  // TODO: Add the required submit and change handlers\n  const initialFormState = {\n    name: \"\",\n    cuisine: \"\",\n    photo: \"\",\n    ingredients: \"\",\n    preparation: \"\",\n  };\n\n  const [formData, setFormData] = useState({ ...initialFormState });\n\n  const handleChange = ({ target }) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"look:\", formData);\n    createRecipe({ ...formData });\n    setFormData({ ...initialFormState });\n  };\n\n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <label htmlFor=\"name\">\n                <th>Name</th>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={handleChange}\n                  value={formData.name}\n                  placeholder=\"Name\"\n                />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"cuisine\">\n                <th>Cuisine</th>\n                <input\n                  type=\"text\"\n                  name=\"cuisine\"\n                  id=\"cuisine\"\n                  onChange={handleChange}\n                  value={formData.cuisine}\n                  placeholder=\"Cuisine\"\n                />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"photo\">\n                <th>Photo</th>\n                <input\n                  type=\"url\"\n                  name=\"photo\"\n                  id=\"photo\"\n                  onChange={handleChange}\n                  value={formData.photo}\n                  placeholder=\"Photo\"\n                />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"ingredients\">\n                <th>Ingredients</th>\n                <textarea\n                  type=\"text\"\n                  name=\"ingredients\"\n                  id=\"ingredients\"\n                  rows={3}\n                  width=\"100%\"\n                  onChange={handleChange}\n                  value={formData.ingredients}\n                  placeholder=\"Ingredients\"\n                />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"preparation\">\n                <th>Preparation</th>\n                <textarea\n                  type=\"text\"\n                  name=\"preparation\"\n                  id=\"preparation\"\n                  rows={3}\n                  onChange={handleChange}\n                  value={formData.preparation}\n                  placeholder=\"Preparation\"\n                />\n              </label>\n            </td>\n            <td>\n              <button type=\"submit\">Create</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React from \"react\";\n\nfunction RecipeList({ recipes, deleteRecipe }) {\n  // TODO: Display the list of recipes using the structure of table that is provided.\n  // TODO: Create at least one additional component that is used by this component.\n  // TODO: Each recipe row must have a delete button - <button name=\"delete\">Delete</button> - that deletes the post when clicked\n  const rows = recipes.map(\n    ({ name, cuisine, photo, ingredients, preparation }, index) => (\n      <tr key={index}>\n        <td>{name}</td>\n        <td>{cuisine}</td>\n        <td>\n          <img src={photo} />\n        </td>\n        <td className=\"content_td\">\n          <p>{ingredients}</p>\n        </td>\n        <td className=\"content_td\">\n          <p>{preparation}</p>\n        </td>\n        <td>\n          <button name=\"delete\" onClick={() => deleteRecipe(index)}>\n            Delete\n          </button>\n        </td>\n      </tr>\n    )\n  );\n\n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preparation</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\";\n\nfunction App() {\n  const [recipes, setRecipes] = useState(RecipeData);\n\n  // TODO: Add the ability for the <RecipeList /> component to list and delete an existing recipe.\n  // TODO: Add the ability for the <RecipeCreate /> component to create new recipes.\n  const createRecipe = (newRecipe) =>\n    setRecipes((RecipeData) => [...RecipeData, newRecipe]);\n\n  const deleteRecipe = (indexToDelete) =>\n    setRecipes((curRecipes) =>\n      curRecipes.filter((recipe, index) => index !== indexToDelete)\n    );\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Delicious Food Recipes</h1>\n      </header>\n      <RecipeList recipes={recipes} deleteRecipe={deleteRecipe} />\n      <RecipeCreate createRecipe={createRecipe} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}